/*
Implements the code class which holds a mastermind code as an integer vector.
Includes methods to set the code, and check if and how well another code matches the code.
Notice: the stored code is assumed to be the secret, and the guess must be passed in.
*/

#include <vector>

// stores, sets, returns, and checks code values
Class code 
{
	public:
	code() {for(int ii=0;ii<4;ii++) { cd[ii] = (int) rand() % 6; } }
	code(int arr[]) { setcodes(arr); }
	// set the code values 
	void setcode(int arr[]) { cd.resize(4); for(int ii=0;ii<4;ii++) { cd[ii] = arr[ii]; } };
	const int checkcorrect(const code gs); // check how many values are in tthe correct position
	const int checkincorrect(const code gs); // check how many values are in incorrect position
	// get the indexed values of a code
	const int getval(const int a) {if(a<4) {return cd[a];} else {printf("Bound error in 'getval' class!");}
	
	protected:
	vector <int> cd;
}

// Checks the number of correct guesses which involve the guess having a correct number
// in the correct position. Assumes that the parameter passed to the function is the guess.
const int code::checkcorrect(const code gs)
{
	// count the number of equal values in corresponding position
	int temp=0; for(int ii=0;ii<4;ii++) {if(cd.getval(ii)==gs.getval(ii)){temp++;}}
	return temp;
}

// Checks the number of incorrect guesses which involve the guess having a correct number
// in the wrong position. Only reports a maximum of one correct value for each position in 
// the code. Assumes that the parameter passed to the function is the guess.

const int code::checkincorrect(const code gs)
{
	// create image of guess corresopnding to code vectors 
	bool image[4] = {false,false,false,false};
	// iteratively check values from the secret
	for(int ii=0;ii<4;ii++) // ii is the secret index
	{
		// iteratively compare to values from the guess
		for(int jj=0;jj<4;jj++) // jj is the guess index
		{
			// ignore corresponding numbers and already matched numbers in the guess
			if((jj!=ii) && (!image[jj]))
			// if numbers match, denote in the image and move to next index in secret
			{ if(cd.getval(ii) == gs.getval(jj)) { image[jj] = true; break; } } 
		}
	}
	// count the number of denoted matches in the image
	int temp=0; for(int kk=0;kk<4;kk++) {if(image[kk]){temp++;}}
	// return number of matches 
	return temp;
}
	
